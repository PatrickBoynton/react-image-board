{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ImageForm","props","state","images","handleInput","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","addImage","imgUrl","imgCaption","console","log","onSubmit","type","id","onChange","className","Component","ImageList","map","image","index","src","alt","App","push","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAIMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,IAEV,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBANH,E,+CASnB,SAAYE,GACVC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,0BAGnD,SAAaL,GACXA,EAAMM,iBACNL,KAAKP,MAAMa,SAASN,KAAKN,OACzBM,KAAKC,SAAS,CAACM,OAAQ,GAAIC,WAAY,KACvCC,QAAQC,IAAIV,KAAKN,S,oBAGnB,WACE,OACA,uBAAMiB,SAAUX,KAAKF,aAArB,UACE,uBAAOc,KAAK,OAAOC,GAAG,SAASV,KAAK,SAASC,MAAOJ,KAAKN,MAAMa,OAAQO,SAAUd,KAAKJ,cACtF,uBAAOgB,KAAK,OAAOC,GAAG,aAAaV,KAAK,aAAaC,MAAOJ,KAAKN,MAAMc,WAAYM,SAAUd,KAAKJ,cAClG,wBAAQmB,UAAU,MAAlB,8B,GA1BkBC,aAgCxB,SAASC,EAAUxB,GAAQ,IAAD,EAClBE,EAAM,UAAGF,EAAME,cAAT,aAAG,EAAcuB,KAAI,SAACC,EAAOC,GAAR,OAC/B,+BACE,qBAAKC,IAAKF,EAAMZ,OAAQe,IAAI,uBAE5B,4BAAIH,EAAMX,eAHHY,MAMX,OACE,6BACGzB,I,IA4CQ4B,E,kDAtCb,WAAY9B,GAAQ,IAAD,8BACjB,cAAMA,IACDa,SAAW,EAAKA,SAAST,KAAd,gBAFC,E,qDAKnB,WAWEG,KAAKC,SAAS,CAACN,OAVA,CACb,CACEY,OAAQ,kKACRC,WAAY,iCAEd,CACED,OAAQ,kKACRC,WAAY,8B,sBAMlB,SAASW,GACP,IAAMxB,EAAM,YAAOK,KAAKN,MAAMC,QAC9BA,EAAO6B,KAAKL,GAEZnB,KAAKC,SAAS,CAACN,a,oBAGjB,WAAU,IAAD,EACP,OACE,cAAC,IAAM8B,SAAP,UACE,sBAAKV,UAAU,MAAf,UACA,cAAC,EAAD,CAAWT,SAAUN,KAAKM,WAC1B,cAACW,EAAD,CAAWtB,OAAM,UAAEK,KAAKN,aAAP,aAAE,EAAYC,kB,GAhCrBqB,aCvCHU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fd1c160a.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\n\n\nclass ImageForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      images: [],\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addImage(this.state);\n    this.setState({imgUrl: \"\", imgCaption: \"\"});\n    console.log(this.state);\n  }\n\n  render() {\n    return (\n    <form onSubmit={this.handleSubmit}>\n      <input type=\"text\" id=\"imgUrl\" name=\"imgUrl\" value={this.state.imgUrl} onChange={this.handleInput}/>\n      <input type=\"text\" id=\"imgCaption\" name=\"imgCaption\" value={this.state.imgCaption} onChange={this.handleInput}/>\n      <button className=\"btn\">Add Image</button>\n    </form>)\n  }\n}\n\n\nfunction ImageList(props) {\n  const images = props.images?.map((image, index) => (\n    <li key={index}>\n      <img src={image.imgUrl} alt=\"There is no image!\"/>\n      {/* <img src={image.imgUrl} alt=\"Some random images\"/> */}\n      <p>{image.imgCaption}</p>\n    </li>\n  ))\n  return (\n    <ul>\n      {images}\n    </ul>\n  )\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.addImage = this.addImage.bind(this);\n  }\n\n  componentDidMount() {\n    const images = [\n      {\n        imgUrl: \"https://images.unsplash.com/photo-1493612276216-ee3925520721?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80\",\n        imgCaption: \"A lightbulb against a sunset.\",\n      },\n      {\n        imgUrl: \"https://images.unsplash.com/photo-1429087969512-1e85aab2683d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=668&q=80\",\n        imgCaption: \"A chair with a baloon\"\n      }\n    ]\n    this.setState({images});\n  }\n\n  addImage(image) {\n    const images = [...this.state.images];\n    images.push(image);\n\n    this.setState({images});\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"App\">\n        <ImageForm addImage={this.addImage}/>\n        <ImageList images={this.state?.images}/>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}